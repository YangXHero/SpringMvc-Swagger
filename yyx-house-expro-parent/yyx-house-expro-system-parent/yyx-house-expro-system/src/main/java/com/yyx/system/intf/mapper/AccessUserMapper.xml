<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yyx.system.intf.mapper.AccessUserMapper" >
  <resultMap id="BaseResultMap" type="com.yyx.system.entity.AccessUserEntity" >
    <id column="acu_id" property="id" jdbcType="BIGINT" />
    <result column="acu_user_id" property="userId" jdbcType="BIGINT" />
    <result column="acu_user_name" property="userName" jdbcType="VARCHAR" />
    <result column="acu_password" property="password" jdbcType="VARCHAR" />
    <result column="acu_creator_id" property="creatorId" jdbcType="BIGINT" />
    <result column="acu_create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="acu_updator_id" property="updatorId" jdbcType="BIGINT" />
    <result column="acu_update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    acu.id as acu_id, acu.user_id as acu_user_id, acu.user_name as acu_user_name, acu.password as acu_password, 
    acu.creator_id as acu_creator_id, acu.create_time as acu_create_time, acu.updator_id as acu_updator_id, 
    acu.update_time as acu_update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from access_user acu
    where acu.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from access_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yyx.zbhr.entity.AccessUserEntity" >
    insert into access_user (id, user_id, user_name, 
      password, creator_id, create_time, 
      updator_id, update_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{creatorId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updatorId,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yyx.zbhr.entity.AccessUserEntity" >
    insert into access_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="creatorId != null" >
        creator_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updatorId != null" >
        updator_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null" >
        #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatorId != null" >
        #{updatorId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yyx.zbhr.entity.AccessUserEntity" >
    update access_user
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null" >
        creator_id = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatorId != null" >
        updator_id = #{updatorId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yyx.zbhr.entity.AccessUserEntity" >
    update access_user
    set user_id = #{userId,jdbcType=BIGINT},
      user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      creator_id = #{creatorId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updator_id = #{updatorId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByMap" resultMap="BaseResultMap"
		parameterType="map">
		select
		<include refid="Base_Column_List" />
		from access_user acu
		where 1=1
		<!-- 判断账号是否存在 start -->
		<if test="null!=loginName">
			and acu.user_name = #{loginName,jdbcType=VARCHAR}
		</if>
		<if test="null!=userId">
			and acu.user_id = #{userId,jdbcType=BIGINT}
		</if>
	</select>
	<!-- 更新考核用户对象 -->
	<update id="updateKHUser" parameterType="com.yyx.zbhr.entity.AccessUserEntity" >
    update access_user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null" >
        creator_id = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatorId != null" >
        updator_id = #{updatorId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
   	  </set>
    	where user_id =  #{userId,jdbcType=BIGINT}
  </update>
</mapper>